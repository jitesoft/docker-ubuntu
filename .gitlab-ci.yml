include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/container_scan.yml

stages:
  - download
  - build
  - scan

.download:
  stage: download
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  before_script:
    - apk add --no-cache gnupg grep curl
  script:
    - gpg --receive-keys D2EB44626FDDC30B513D5BB71A5D6C4C7DB87C81
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz"
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/SHA256SUMS"
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/SHA256SUMS.gpg"
    - gpg --verify SHA256SUMS.gpg SHA256SUMS
    - cat SHA256SUMS | grep " *ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz\$" | sha256sum -c -
    - mv ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz ubuntu-root.tar.gz
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/ubuntu-root.tar.gz
    expire_in: 5 days

.build:
  stage: build
  image: registry.gitlab.com/jitesoft/dockerfiles/docker:latest
  services:
    - registry.gitlab.com/jitesoft/dockerfiles/docker/dind:latest
  before_script:
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${DIST}-tmp .
    - |
      for tag in ${TAGS}; do
        docker tag ${CI_REGISTRY_IMAGE}:${DIST}-tmp ${CI_REGISTRY_IMAGE}:${tag}
        docker push ${CI_REGISTRY_IMAGE}:${tag}
      done

download:eoan:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: eoan

download:disco:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: disco

download:cosmic:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: cosmic

download:bionic:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: bionic

build:eoan:
  extends: .build
  variables:
    DIST: eoan
    VERSION: "19.10"
    TAGS: "eoan 19.10 lts latest"


build:disco:
  extends: .build
  variables:
    DIST: disco
    VERSION: "19.04"
    TAGS: "eoan 19.04"


build:cosmic:
  extends: .build
  variables:
    DIST: cosmic
    VERSION: "18.10"
    TAGS: "cosmic 18.10"


build:bionic:
  extends: .build
  variables:
    DIST: bionic
    VERSION: "18.04"
    TAGS: "bionic 18.04"

scan:eoan:
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:eoan"

scan:disco:
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:disco"

scan:cosmic:
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:cosmic"

scan:bionic:
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:bionic"
