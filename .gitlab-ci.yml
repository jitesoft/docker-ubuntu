include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/container_scan.yml

stages:
  - download
  - build
  - scan

.download:
  stage: download
  variables:
    GIT_STRATEGY: none
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  before_script:
    - apk add --no-cache gnupg grep curl
  script:
    - gpg --receive-keys D2EB44626FDDC30B513D5BB71A5D6C4C7DB87C81
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz"
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/SHA256SUMS"
    - curl -OsS "https://partner-images.canonical.com/core/${DIST}/current/SHA256SUMS.gpg"
    - gpg --verify SHA256SUMS.gpg SHA256SUMS
    - cat SHA256SUMS | grep " *ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz\$" | sha256sum -c -
    - mv ubuntu-${DIST}-core-cloudimg-amd64-root.tar.gz ubuntu-root.tar.gz
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/ubuntu-root.tar.gz
    expire_in: 5 days

.build:
  variables:
    DOCKER_BUILDKIT: 1
  stage: build
  image: registry.gitlab.com/jitesoft/dockerfiles/docker:latest
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${DIST}-tmp --label "com.jitesoft.app.ubuntu.dist=${DIST}" --label "com.jitesoft.app.ubuntu.version=${VERSION}" .
    - |
      for tag in ${TAGS}; do
        docker tag ${CI_REGISTRY_IMAGE}:${DIST}-tmp ${CI_REGISTRY_IMAGE}:${tag}
        docker tag ${CI_REGISTRY_IMAGE}:${DIST}-tmp jitesoft/ubuntu:${tag}
        docker tag ${CI_REGISTRY_IMAGE}:${DIST}-tmp quay.io/jitesoft/ubuntu:${tag}
        docker push ${CI_REGISTRY_IMAGE}:${tag}
        docker push quay.io/jitesoft/ubuntu:${tag}
        docker push jitesoft/ubuntu:${tag}
      done

download:eoan:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: eoan

download:disco:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: disco

download:cosmic:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: cosmic

download:bionic:
  extends: .download
  variables:
    GIT_STRATEGY: none
    DIST: bionic

build:eoan:
  extends: .build
  dependencies:
    - download:eoan
  variables:
    DIST: eoan
    VERSION: "19.10"
    TAGS: "eoan 19.10 lts latest"

build:disco:
  extends: .build
  dependencies:
    - download:disco
  variables:
    DIST: disco
    VERSION: "19.04"
    TAGS: "disco 19.04"

build:cosmic:
  extends: .build
  dependencies:
    - download:cosmic
  variables:
    DIST: cosmic
    VERSION: "18.10"
    TAGS: "cosmic 18.10"

build:bionic:
  extends: .build
  dependencies:
    - download:bionic
  variables:
    DIST: bionic
    VERSION: "18.04"
    TAGS: "bionic 18.04"

scan:eoan:
  stage: scan
  needs:
    - build:eoan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:eoan"
    GIT_STRATEGY: none

scan:disco:
  needs:
    - build:disco
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:disco"
    GIT_STRATEGY: none

scan:cosmic:
  needs:
    - build:cosmic
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:cosmic"
    GIT_STRATEGY: none

scan:bionic:
  needs:
    - build:bionic
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:bionic"
    GIT_STRATEGY: none
